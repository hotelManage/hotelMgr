<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.base.HotelItemMapper">
  <resultMap id="BaseResultMap" type="com.hotel.model.base.HotelItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="is_used" jdbcType="BIT" property="isUsed" />
  </resultMap>
  <resultMap id="BaseVMResultMap" type="com.hotel.viewmodel.base.HotelItemVM">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="is_used" jdbcType="BIT" property="isUsed" />
    
    <result column="hotel_name" jdbcType="VARCHAR" property="hotelName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Base_Column_List">
    id, hotel_id, name, note, tel, is_used
  </sql>
  <sql id="BaseVM_Column_List">
    item.id, item.hotel_id, item.name, item.note, item.tel, item.is_used, h.name as hotel_name, ic.url as url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.model.base.HotelItem">
  <selectKey resultType="INTEGER" keyProperty="id">
       SELECT LAST_INSERT_ID()
  </selectKey>
    insert into t_item (id, hotel_id, name, 
      note, tel, is_used)
    values (#{id,jdbcType=INTEGER}, #{hotelId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{isUsed,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.model.base.HotelItem">
    insert into t_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.model.base.HotelItem">
    update t_item
    <set>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.model.base.HotelItem">
    update t_item
    set hotel_id = #{hotelId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      is_used = #{isUsed,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="countByMap"   parameterType="java.util.Map"  resultType="java.lang.Integer"  >
  		select count(*) from t_item  
  		where is_used =1
  </select>
  <select id="loadHotelItemList"   parameterType="java.util.Map"  resultMap="BaseVMResultMap"  >
  		select 
  			<include refid="BaseVM_Column_List" />
  		from t_item item  
  		left join t_hotel h on item.hotel_id = h.id
  		left join t_item_content ic on ic.item_id = item.id
  		where item.is_used =1
  		<if test="pageStart !=null">
  		limit #{pageStart,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  		</if>
  </select>
  <select id="selectByName"   parameterType="java.lang.String"  resultMap="BaseVMResultMap"  >
  		select 
  			<include refid="BaseVM_Column_List" />
  		from t_item item  
  		left join t_hotel h on item.hotel_id = h.id
  		where item.name = #{name,jdbcType=VARCHAR} and item.is_used =1
  </select>
</mapper>